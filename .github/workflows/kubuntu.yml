# Kubuntu
# Requires a custom docker container
# The Dockerfile is inside .github/assets/docker/kubuntu
# Build Darkly from release tag and publish .deb package

on:
  workflow_call:
    inputs:
      cache-file-path:
        required: true
        type: string
      version:
        required: true
        type: string
jobs:
  build:
    runs-on: ubuntu-24.04
    container: deltacopy/kubuntu:0.1
    steps:
      - uses: actions/cache/restore@v4
        with:
          key: ${{ runner.os }}-v${{ inputs.version }}-${{ hashFiles(inputs.cache-file-path) }}
          path: ${{ inputs.cache-file-path }}
          fail-on-cache-miss: true
      - name: Install build dependencies
        run: |
          apt-get install -y -qq cmake build-essential libkf5config-dev libkdecorations3-dev \
                    libqt5x11extras5-dev qtdeclarative5-dev extra-cmake-modules \
                    libkf5guiaddons-dev libkf5configwidgets-dev libkf5windowsystem-dev kirigami2-dev \
                    libkf5coreaddons-dev libkf5iconthemes-dev gettext qt3d5-dev libkf5kcmutils-dev \
                    qt6-base-dev libkf6coreaddons-dev libkf6colorscheme-dev \
                    libkf6config-dev libkf6guiaddons-dev libkf6i18n-dev libkf6iconthemes-dev \
                    libkf6windowsystem-dev libkf6kcmutils-dev libkirigami-dev libkf6style-dev
      - name: Extract release tarball
        run: tar xvf ${{ inputs.cache-file-path }}
      - name: Build Darkly
        run: |
          cmake -B build_kf6 -DBUILD_TESTING=OFF -Wno-dev -S Darkly-${{inputs.version}}
          cmake --build build_kf6 -j $(nproc)
      - name: Create deb package
        id: create_deb_package
        run: |
          cd build_kf6
          checkinstall -D --pkgname darkly --pkgversion ${{ inputs.version }} --nodoc --fstrans=no --default
          deb_file=$(find . -name "*.deb*")
          test ! -z $deb_file && mv $deb_file ${{ env.GITHUB_WORKSPACE}}/darkly_${{ inputs.version }}_kubuntu_amd64.deb
          echo "DEB_ASSET=${{ env.GITHUB_WORKSPACE}}/darkly_${{ inputs.version }}_kubuntu_amd64.deb" >> "$GITHUB_OUTPUT"
      - name: Release
        uses: softprops/action-gh-release@v2.0.8
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ steps.create_deb_package.outputs.DEB_ASSET }}
